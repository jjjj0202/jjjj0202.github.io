---
layout: post
title:  "[Dreamhack] Blind SQL Injection Advanced"
date:   2025-04-01 08:42:22 +0900
featured: /assets/images/블로그3.png
categories: jekyll update
---
<p>안녕하세요! 이번 문제는 드림핵 Blind SQL Injection Advanced에서 실습하는 문제입니다.</p>
<img src="/assets/images/250401/1.png" style="max-width: 100%; height: auto;"> 
<p>해당 페이지를 보시면 쿼리를 이용하여 공격해야되는 것이 보이는데요. uid를 보니 계정을 출력해주는 페이지인것 같습니다.</p>
<img src="/assets/images/250401/2.png" style="max-width: 100%; height: auto;"> 
<p>'admin'을 입력하면 아랫 부분에 exists라는 문구가 뜨며 계정 정보를 보여줍니다.</p>
<img src="/assets/images/250401/3.png" style="max-width: 100%; height: auto;"> 
<p>존재하지 않는 계정 정보를 입력하면 아무런 출력이 없는 것을 알 수 있습니다.</p>
<img src="/assets/images/250401/4.png" style="max-width: 100%; height: auto;">
<img src="/assets/images/250401/5.png" style="max-width: 100%; height: auto;">
<p>위와 같이 'admin'계정을 이용하여 and 문을 작성 할 수있는데요. 이 취약점을 이용하여 Blind SQL Injection 공격을 시도해보겠습니다.
</p>
<img src="/assets/images/250401/6.png" style="max-width: 100%; height: auto;">
<p>문제의 쿼리를 확인해보면 'users' 테이블에 'upw'컬럼이 있는 것을 확인이 가능합니다. 'admin'의 'upw'부분에 Flag 값을 확인해야합니다.</p>
<img src="/assets/images/250401/7.png" style="max-width: 100%; height: auto;">
<p>우선 패스워드 길이를 확인해야 합니다. mysql에서 지원하는 char_length를 이용하여 문자 길이를 확인 할수 있습니다.</p>
<img src="/assets/images/250401/8-1.png" style="max-width: 100%; height: auto;">
<p>그리고 문제 설명을 보면 아스키코드와 한글로 병합되어 있는것을 알수 있는데요. 아스키코드와 한글은 bit수가 다르므로, 각 문자 마다 bit수를 확인해야됩니다.</p>
<img src="/assets/images/250401/8-2.png" style="max-width: 100%; height: auto;">
<p>substr은 문자를 잘라서 출력해주는 함수입니다. 
※substr( '문자' , '문자 위치' , '자를 문자 갯수')
ord은 문자를 정수로 출력해주며, bin은 출력된 정수를 bit로(2진수) 변환해줍니다. 그리고 length로 bit길이를 출력하여, 각 문자 자리 길이를 출력합니다.</p>
<img src="/assets/images/250401/9.png" style="max-width: 100%; height: auto;">
<p>각 문자 길이가 출력되었다면, 이제는 해당 비트를 출력합니다. 전 단계 쿼리에서 출력한 비트를 substr로 다시 한번 잘라서 한 자리씩 출력하며 0 인지 1인지 구분합니다. 문자열 'exists'가 출력이 되지 않는다면 0으로 bits 변수에 추가합니다.</p>
<img src="/assets/images/250401/10.png" style="max-width: 100%; height: auto;">
<p>이제 해당 비트를 '정수'로 변환 한 후에, '빅 엔디안'으로 변환합니다. 변환한 바이트를 인코딩하여, 출력된 문자를 password에 추가 입력합니다.</p>
<p>'000000001010110000000000' 비트를 예시로 들겠습니다.
비트를 바이트로 나누면은 2바이트가 되며, 16진수로 '10101100'가 '0xAC', '00000000'가 '0x00'로 변환 됩니다. 둘을 합치면은 '0xAC00'이 되며, 바이트 형태로는 '\xac\x00'가 됩니다.
이렇게 높은 바이트부터 저장을 하는 것을 '빅 엔디안'이라고 하며, 컴퓨터에서 문자를 저장할 때 쓰입니다.
이제 이것을 인코딩해주면 문자 '가'가 나옵니다.</p>
<img src="/assets/images/250401/11.png" style="max-width: 100%; height: auto;">
<p>위의 코드를 합쳐서 최종 코드를 작성합니다.</p>
<img src="/assets/images/250401/12.png" style="max-width: 100%; height: auto;">
<p>파이썬 코드를 CMD로 돌려보면, Flag값이 나오는 것을 확인 할 수 있습니다.</p>